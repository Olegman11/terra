#line 2
uniform sampler2D heights;
uniform sampler2D slopes;
uniform sampler2D noise;
uniform float noiseWavelength;

/// Uses a fractal to refine the height and slope sourced from the course texture.
void compute_height_and_slope(vec2 pos, vec2 texCoord, out float height, out vec2 slope) {
    height = texture(heights, texCoord).r;
	slope = texture(slopes, texCoord).xy;

	float scale = 10.0;
	float wavelength = 32.0;
	for(int i = 0; i < 6; i++) {
		float smoothing = mix(0.01, 0.15, smoothstep(0.25, 0.35, length(slope)));
		vec3 v = texture(noise, pos * noiseWavelength / wavelength).rgb;
		height += v.x * scale * smoothing;
		slope += v.yz * scale * smoothing / wavelength;

		scale *= 0.5;
		wavelength *= 0.5;
	}
}

float fractal(vec2 pos) {
	float value = 0.0;

	float scale = 1.0 / 3;
	float wavelength = 1.0;
	for(int i = 0; i < 3; i++) {
		vec3 v = texture(noise, pos * noiseWavelength / wavelength).rgb;
		value += v.x * scale;

		//		scale *= 0.5;
		wavelength *= 0.5;
	}
	return value;
}
