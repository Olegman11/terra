#line 2

layout(local_size_x = 1, local_size_y = 1) in;

layout(binding = 0) uniform UniformBlock {
    vec2 position;
	float base_heights_spacing;
	float spacing;
} ubo;

layout(set = 0, binding = 1) uniform texture2D base_heights;
layout(rgba32f, binding = 2) uniform image2D heights_staging;
layout(rg8, binding = 3) uniform image2D normals_staging;

layout(set = 0, binding = 4) uniform sampler linear;
layout(set = 0, binding = 5) uniform sampler linear_wrap;
layout(set = 0, binding = 6) uniform texture2D noise;

float cubic(vec4 f, float t)
{
	return dot(f, vec4(-0.5, 1.5, -1.5, 0.5)) * t*t*t
		+ dot(f, vec4(1.0, -2.5, 2.0, -0.5)) * t*t
		+ dot(f, vec4(-0.5, 0.0, 0.5, 0.0)) * t
		+ f.y;
}

void main() {
	vec2 position = ubo.position
		+ vec2(gl_GlobalInvocationID.xy) * ubo.spacing;

	vec2 texsize = vec2(textureSize(base_heights, 0));
	vec2 texcoord = vec2(0.5) + position / (texsize * ubo.base_heights_spacing);
	vec2 t = fract(texcoord * texsize + vec2(0.5));

	//            x=0      |      x=1
	//     +-------+-------+-------+-------+
	//     | t00.w | t00.z | t10.w | t10.z |
	// y=0 +-------+-------+-------+-------+
	//     | t00.x | t00.y | t10.x | t10.y |
	// --- +-------+-------+-------+-------+
	//     | t01.w | t01.z | t11.w | t11.z |
	// y=1 +-------+-------+-------+-------+
	//     | t01.x | t01.y | t11.x | t11.y |
	//     +-------+-------+-------+-------+
	vec4 t00 = textureGatherOffset(sampler2D(base_heights, linear), texcoord, ivec2(-1,-1));
	vec4 t10 = textureGatherOffset(sampler2D(base_heights, linear), texcoord, ivec2(1,-1));
	vec4 t01 = textureGatherOffset(sampler2D(base_heights, linear), texcoord, ivec2(-1,1));
	vec4 t11 = textureGatherOffset(sampler2D(base_heights, linear), texcoord, ivec2(1,1));

	// float f00 = t00.y;
	// float f10 = t10.x;
	// float f01 = t01.z;
	// float f11 = t11.w;
	// float dx00 = (t10.x - t00.x) * 0.5;
	// float dx10 = (t10.y - t00.y) * 0.5;
	// float dx01 = (t11.w - t01.w) * 0.5;
	// float dx11 = (t11.z - t01.z) * 0.5;
	// float dy00 = (t01.z - t00.z) * 0.5;
	// float dy10 = (t11.w - t10.w) * 0.5;
	// float dy01 = (t10.y - t00.y) * 0.5;
	// float dy11 = (t11.x - t10.x) * 0.5;
	// float dxdy00 = ((t11.w - t10.w) - (t01.w - t00.w)) * 0.25;
	// float dxdy10 = ((t11.z - t10.z) - (t01.z - t00.z)) * 0.25;
	// float dxdy01 = ((t11.x - t10.x) - (t01.x - t00.x)) * 0.25;
	// float dxdy11 = ((t11.y - t10.y) - (t01.y - t00.y)) * 0.25;

	float bh = cubic(vec4(cubic(vec4(t00.w, t00.z, t10.w, t10.z), t.x),
						  cubic(vec4(t00.x, t00.y, t10.x, t10.y), t.x),
						  cubic(vec4(t01.w, t01.z, t11.w, t11.z), t.x),
						  cubic(vec4(t01.x, t01.y, t11.x, t11.y), t.x)), t.y);

	float n = texture(sampler2D(noise, linear_wrap), position/256).x;
	float n2 = texture(sampler2D(noise, linear_wrap), position/1024).x;
	float n3 = texture(sampler2D(noise, linear_wrap), position/4096).x;
	float n4 = texture(sampler2D(noise, linear_wrap), position/16384).x;

	vec4 out_height = vec4(0.0, bh + n + n2*2 + n3*20, 0.0, 0.0);

	imageStore(heights_staging, ivec2(gl_GlobalInvocationID.xy), out_height);
}
